package proyectoparadigmas;

import archivos.AbrirArchivos;
import static archivos.GuardarArchivo.guardarComo;
import java.awt.Color;
import static java.awt.Color.blue;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import parser.Parser;

/**
 * @author Carlos Chacon Vargas
 * @author Bryan Sanchez Brenes
 * @author Diego Quiros Brenes
 * @author Alessandro Fazio Perez
 */
public class View extends javax.swing.JFrame {

    private RunExpresion RunExp;
    private boolean debug;

    public RunExpresion getRunExp() {
        return RunExp;
    }

    public void setRunExp(RunExpresion RunExp) {
        this.RunExp = RunExp;
    }

    /**
     * Creates new form View1
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane_Codigo = new javax.swing.JScrollPane();
        jTextArea_Codigo = new javax.swing.JTextArea();
        jScrollPane_Expression = new javax.swing.JScrollPane();
        jTextArea_Expression = new javax.swing.JTextArea();
        label_Expression = new javax.swing.JLabel();
        jScrollPane_Resultado = new javax.swing.JScrollPane();
        jTextArea_Resultado = new javax.swing.JTextArea();
        jBtn_Run = new javax.swing.JButton();
        jBtn_Debug = new javax.swing.JButton();
        jBtn_Stop = new javax.swing.JButton();
        jBtn_Nuevo = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        abrirArchivo = new javax.swing.JMenuItem();
        guardarArchivo = new javax.swing.JMenuItem();
        menuAcerca = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto 1 Paradigmas de Programación");
        setLocationByPlatform(true);
        setName("frameMain"); // NOI18N

        jTextArea_Codigo.setColumns(20);
        jTextArea_Codigo.setRows(5);
        jTextArea_Codigo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea_CodigoMouseClicked(evt);
            }
        });
        jScrollPane_Codigo.setViewportView(jTextArea_Codigo);

        jTextArea_Expression.setColumns(20);
        jTextArea_Expression.setRows(5);
        jScrollPane_Expression.setViewportView(jTextArea_Expression);

        label_Expression.setText("Expression: ");

        jTextArea_Resultado.setEditable(false);
        jTextArea_Resultado.setColumns(20);
        jTextArea_Resultado.setRows(5);
        jScrollPane_Resultado.setViewportView(jTextArea_Resultado);

        jBtn_Run.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/play.png"))); // NOI18N
        jBtn_Run.setText("Run");
        jBtn_Run.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_RunMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBtn_RunMouseEntered(evt);
            }
        });
        jBtn_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_RunActionPerformed(evt);
            }
        });

        jBtn_Debug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bug.png"))); // NOI18N
<<<<<<< HEAD
        jBtn_Debug.setText("Debug");
        jBtn_Debug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_DebugActionPerformed(evt);
            }
        });
=======
        jBtn_Debug.setText("Debuger");
>>>>>>> 4009e1f918ae7d8f7079d27008d21fcdef66ae85

        jBtn_Stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/stop.png"))); // NOI18N
        jBtn_Stop.setText("Stop");
        jBtn_Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_StopActionPerformed(evt);
            }
        });

        jBtn_Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/compiler.png"))); // NOI18N
        jBtn_Nuevo.setText("New");
        jBtn_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_NuevoActionPerformed(evt);
            }
        });

        Next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/next-button.png"))); // NOI18N
        Next.setText("Next");
        Next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NextMouseClicked(evt);
            }
        });
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        menuArchivo.setText("Archivos");

        abrirArchivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrirArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/abrirArchivo.png"))); // NOI18N
        abrirArchivo.setText("Abrir");
        abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoActionPerformed(evt);
            }
        });
        menuArchivo.add(abrirArchivo);

        guardarArchivo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardarArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardarArchivo.png"))); // NOI18N
        guardarArchivo.setText("Guardar");
        guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoActionPerformed(evt);
            }
        });
        menuArchivo.add(guardarArchivo);

        jMenuBar.add(menuArchivo);

        menuAcerca.setText("Información");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/info.png"))); // NOI18N
        jMenuItem1.setText("Acerca de...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAcerca.add(jMenuItem1);

        jMenuBar.add(menuAcerca);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_Expression)
                    .addComponent(jScrollPane_Expression, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane_Resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jBtn_Nuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_Run, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtn_Debug, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane_Codigo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane_Resultado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addGap(3, 3, 3)
                .addComponent(label_Expression)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane_Expression, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn_Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtn_Run, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtn_Debug, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtn_Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_RunActionPerformed
        String codigo = jTextArea_Codigo.getText();
        String exp = jTextArea_Expression.getText();

        if ((codigo == null || codigo.equals("")) && (exp == null || exp.equals(""))) {
            JOptionPane.showMessageDialog(null, "Los campos codigo y expresion estan vacios");
        } else if ((codigo == null || codigo.equals(""))) {
            JOptionPane.showMessageDialog(null, "Ingrese el codigo");
        } else if ((exp == null || exp.equals(""))) {
            JOptionPane.showMessageDialog(null, "Ingrese la expresion");
        }
    }//GEN-LAST:event_jBtn_RunActionPerformed

    private void abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoActionPerformed
        limpiarCampos();
        AbrirArchivos.abrirArchivo(this, jTextArea_Codigo);
    }//GEN-LAST:event_abrirArchivoActionPerformed

    private void guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoActionPerformed
        guardarComo(jTextArea_Codigo);
    }//GEN-LAST:event_guardarArchivoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(null,
                "Autores:\n"
                + "1.Diego Quiros Brenes \n"
                + "2.Carlos Chacon Vargas \n"
                + "3.Alessandro Fazio Perez \n"
                + "4.Bryan Sanchez Brenes\n"
                + "\nGrupo 3:00 p.m\n"
                + "Paradigmas de Programación\n");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextArea_CodigoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea_CodigoMouseClicked

//        if (!ejemplo) {
//            limpiarCampos();
//            ejemplo = true;
//        }
    }//GEN-LAST:event_jTextArea_CodigoMouseClicked

    private void jBtn_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_NuevoActionPerformed

        limpiarCampos();
        // ejemplo = false;

    }//GEN-LAST:event_jBtn_NuevoActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed

    }//GEN-LAST:event_NextActionPerformed

    private void NextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextMouseClicked
        this.getRunExp().resume();
    }//GEN-LAST:event_NextMouseClicked

    private void jBtn_RunMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_RunMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtn_RunMouseEntered

    private void jBtn_RunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_RunMouseClicked
        Parser parser = new Parser();
        String codigo = jTextArea_Codigo.getText();
        String valor_expresion = jTextArea_Expression.getText();
        this.debug = false;

        Highlighter.HighlightPainter cyanPainter
                = new DefaultHighlighter.DefaultHighlightPainter(Color.cyan);

        try {
            jTextArea_Codigo.getHighlighter().addHighlight(8, 24, cyanPainter);
        } catch (BadLocationException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            if (codigo == null || codigo == "" || valor_expresion == null || valor_expresion == "") {
                throw new Exception("error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        try {

            parser.leerCodigo(codigo);

            RunExpresion expresion = new RunExpresion(parser, valor_expresion);
            this.setRunExp(expresion);

            System.out.printf("Resultado del Run Expression:%n%s%n", this.getRunExp());
            jTextArea_Resultado.setText(this.getRunExp().toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);

<<<<<<< HEAD
        RunExpresion expresion = new RunExpresion(parser, valor_expresion, this, debug);
        this.setRunExp(expresion);
=======
        }
>>>>>>> 4009e1f918ae7d8f7079d27008d21fcdef66ae85

        //  System.out.printf("Expresion:%s%n", valor_expresion);
        //System.out.printf("Resultado del parser:%n%s%n", parser);
        // this.getRunExp().calcularValoresPrueba();
<<<<<<< HEAD
        //System.out.printf("Resultado del Run Expression:%n%s%n", this.getRunExp());
        jTextArea_Resultado.setText(this.getRunExp().getResultado().toString());

    }//GEN-LAST:event_jBtn_RunMouseClicked

    private void jBtn_DebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_DebugActionPerformed
        Parser parser = new Parser();
        String codigo = jTextArea_Codigo.getText();
        String valor_expresion = jTextArea_Expression.getText();
        this.debug = true;

        Highlighter.HighlightPainter cyanPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.cyan);

        try {
            jTextArea_Codigo.getHighlighter().addHighlight(3, 3, cyanPainter);
        } catch (BadLocationException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            if (codigo == null || codigo == "" || valor_expresion == null || valor_expresion == "") {
                throw new Exception("error");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        try {
            if (!this.getjTextArea_Codigo().getText().equals("") && !this.jTextArea_Expression.getText().equals("")) {
            parser.leerCodigo(codigo);
            RunExpresion expresion = new RunExpresion(parser, valor_expresion, this, debug);
            this.setRunExp(expresion);
        } else {
            JOptionPane.showMessageDialog(new JDialog(), "Llene los campos correctamente");
        }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBtn_DebugActionPerformed

    public JTextArea getjTextArea_Codigo() {
        return jTextArea_Codigo;
    }

    public JTextArea getjTextArea_Resultado() {
        return jTextArea_Resultado;
    }
=======
    }//GEN-LAST:event_jBtn_RunMouseClicked

    private void jBtn_StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_StopActionPerformed
        RunExp.stop(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jBtn_StopActionPerformed
>>>>>>> 4009e1f918ae7d8f7079d27008d21fcdef66ae85

    private void limpiarCampos() {
        jTextArea_Codigo.setText("");
        jTextArea_Expression.setText("");
        jTextArea_Resultado.setText("");
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Next;
    private javax.swing.JMenuItem abrirArchivo;
    private javax.swing.JMenuItem guardarArchivo;
    private javax.swing.JButton jBtn_Debug;
    private javax.swing.JButton jBtn_Nuevo;
    private javax.swing.JButton jBtn_Run;
    private javax.swing.JButton jBtn_Stop;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane_Codigo;
    private javax.swing.JScrollPane jScrollPane_Expression;
    private javax.swing.JScrollPane jScrollPane_Resultado;
    private javax.swing.JTextArea jTextArea_Codigo;
    private javax.swing.JTextArea jTextArea_Expression;
    private javax.swing.JTextArea jTextArea_Resultado;
    private javax.swing.JLabel label_Expression;
    private javax.swing.JMenu menuAcerca;
    private javax.swing.JMenu menuArchivo;
    // End of variables declaration//GEN-END:variables

    // private boolean ejemplo = false;
}
